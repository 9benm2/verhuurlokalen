#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TI2_opdracht2")]
public partial class VerhuurDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertVereniging(Vereniging instance);
  partial void UpdateVereniging(Vereniging instance);
  partial void DeleteVereniging(Vereniging instance);
  partial void InsertContract(Contract instance);
  partial void UpdateContract(Contract instance);
  partial void DeleteContract(Contract instance);
  partial void InsertKamp(Kamp instance);
  partial void UpdateKamp(Kamp instance);
  partial void DeleteKamp(Kamp instance);
  partial void InsertType(Type instance);
  partial void UpdateType(Type instance);
  partial void DeleteType(Type instance);
  partial void InsertStatus(Status instance);
  partial void UpdateStatus(Status instance);
  partial void DeleteStatus(Status instance);
  partial void InsertPeriode(Periode instance);
  partial void UpdatePeriode(Periode instance);
  partial void DeletePeriode(Periode instance);
  partial void InsertPersoon(Persoon instance);
  partial void UpdatePersoon(Persoon instance);
  partial void DeletePersoon(Persoon instance);
  partial void InsertStatusBetaling(StatusBetaling instance);
  partial void UpdateStatusBetaling(StatusBetaling instance);
  partial void DeleteStatusBetaling(StatusBetaling instance);
  partial void InsertTypeBetaling(TypeBetaling instance);
  partial void UpdateTypeBetaling(TypeBetaling instance);
  partial void DeleteTypeBetaling(TypeBetaling instance);
  partial void InsertBetaling(Betaling instance);
  partial void UpdateBetaling(Betaling instance);
  partial void DeleteBetaling(Betaling instance);
  partial void InsertContractPersoon(ContractPersoon instance);
  partial void UpdateContractPersoon(ContractPersoon instance);
  partial void DeleteContractPersoon(ContractPersoon instance);
  partial void InsertRol(Rol instance);
  partial void UpdateRol(Rol instance);
  partial void DeleteRol(Rol instance);
  #endregion
	
	public VerhuurDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TI2_opdracht2ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VerhuurDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VerhuurDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VerhuurDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VerhuurDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Vereniging> Verenigings
	{
		get
		{
			return this.GetTable<Vereniging>();
		}
	}
	
	public System.Data.Linq.Table<Contract> Contracts
	{
		get
		{
			return this.GetTable<Contract>();
		}
	}
	
	public System.Data.Linq.Table<Kamp> Kamps
	{
		get
		{
			return this.GetTable<Kamp>();
		}
	}
	
	public System.Data.Linq.Table<Type> Types
	{
		get
		{
			return this.GetTable<Type>();
		}
	}
	
	public System.Data.Linq.Table<Status> Status
	{
		get
		{
			return this.GetTable<Status>();
		}
	}
	
	public System.Data.Linq.Table<Periode> Periodes
	{
		get
		{
			return this.GetTable<Periode>();
		}
	}
	
	public System.Data.Linq.Table<Persoon> Persoons
	{
		get
		{
			return this.GetTable<Persoon>();
		}
	}
	
	public System.Data.Linq.Table<StatusBetaling> StatusBetalings
	{
		get
		{
			return this.GetTable<StatusBetaling>();
		}
	}
	
	public System.Data.Linq.Table<TypeBetaling> TypeBetalings
	{
		get
		{
			return this.GetTable<TypeBetaling>();
		}
	}
	
	public System.Data.Linq.Table<Betaling> Betalings
	{
		get
		{
			return this.GetTable<Betaling>();
		}
	}
	
	public System.Data.Linq.Table<ContractPersoon> ContractPersoons
	{
		get
		{
			return this.GetTable<ContractPersoon>();
		}
	}
	
	public System.Data.Linq.Table<Rol> Rols
	{
		get
		{
			return this.GetTable<Rol>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPeriodesOpDatum")]
	public ISingleResult<Periode> GetPeriodesOpDatum([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> param1)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), param1);
		return ((ISingleResult<Periode>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPeriodesTussen")]
	public ISingleResult<Periode> GetPeriodesTussen([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> param1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> param2)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), param1, param2);
		return ((ISingleResult<Periode>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBetalingenByContractId")]
	public ISingleResult<Betaling> GetBetalingenByContractId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> param1)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), param1);
		return ((ISingleResult<Betaling>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetContractPersonenByContractId")]
	public ISingleResult<ContractPersoon> GetContractPersonenByContractId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> param1)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), param1);
		return ((ISingleResult<ContractPersoon>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetContractPersonenByPersoonId")]
	public ISingleResult<ContractPersoon> GetContractPersonenByPersoonId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> param1)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), param1);
		return ((ISingleResult<ContractPersoon>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vereniging")]
public partial class Vereniging : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Naam;
	
	private EntitySet<Persoon> _Persoons;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
	
	public Vereniging()
	{
		this._Persoons = new EntitySet<Persoon>(new Action<Persoon>(this.attach_Persoons), new Action<Persoon>(this.detach_Persoons));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(500)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vereniging_Persoon", Storage="_Persoons", ThisKey="Id", OtherKey="VerenigingId")]
	public EntitySet<Persoon> Persoons
	{
		get
		{
			return this._Persoons;
		}
		set
		{
			this._Persoons.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Persoons(Persoon entity)
	{
		this.SendPropertyChanging();
		entity.Vereniging = this;
	}
	
	private void detach_Persoons(Persoon entity)
	{
		this.SendPropertyChanging();
		entity.Vereniging = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _KampId;
	
	private System.Nullable<int> _PeriodeId;
	
	private EntitySet<Betaling> _Betalings;
	
	private EntitySet<ContractPersoon> _ContractPersoons;
	
	private EntityRef<Kamp> _Kamp;
	
	private EntityRef<Periode> _Periode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKampIdChanging(System.Nullable<int> value);
    partial void OnKampIdChanged();
    partial void OnPeriodeIdChanging(System.Nullable<int> value);
    partial void OnPeriodeIdChanged();
    #endregion
	
	public Contract()
	{
		this._Betalings = new EntitySet<Betaling>(new Action<Betaling>(this.attach_Betalings), new Action<Betaling>(this.detach_Betalings));
		this._ContractPersoons = new EntitySet<ContractPersoon>(new Action<ContractPersoon>(this.attach_ContractPersoons), new Action<ContractPersoon>(this.detach_ContractPersoons));
		this._Kamp = default(EntityRef<Kamp>);
		this._Periode = default(EntityRef<Periode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KampId", DbType="Int")]
	public System.Nullable<int> KampId
	{
		get
		{
			return this._KampId;
		}
		set
		{
			if ((this._KampId != value))
			{
				if (this._Kamp.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnKampIdChanging(value);
				this.SendPropertyChanging();
				this._KampId = value;
				this.SendPropertyChanged("KampId");
				this.OnKampIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodeId", DbType="Int")]
	public System.Nullable<int> PeriodeId
	{
		get
		{
			return this._PeriodeId;
		}
		set
		{
			if ((this._PeriodeId != value))
			{
				if (this._Periode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPeriodeIdChanging(value);
				this.SendPropertyChanging();
				this._PeriodeId = value;
				this.SendPropertyChanged("PeriodeId");
				this.OnPeriodeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Betaling", Storage="_Betalings", ThisKey="Id", OtherKey="ContractId")]
	public EntitySet<Betaling> Betalings
	{
		get
		{
			return this._Betalings;
		}
		set
		{
			this._Betalings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractPersoon", Storage="_ContractPersoons", ThisKey="Id", OtherKey="ContractId")]
	public EntitySet<ContractPersoon> ContractPersoons
	{
		get
		{
			return this._ContractPersoons;
		}
		set
		{
			this._ContractPersoons.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kamp_Contract", Storage="_Kamp", ThisKey="KampId", OtherKey="Id", IsForeignKey=true)]
	public Kamp Kamp
	{
		get
		{
			return this._Kamp.Entity;
		}
		set
		{
			Kamp previousValue = this._Kamp.Entity;
			if (((previousValue != value) 
						|| (this._Kamp.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kamp.Entity = null;
					previousValue.Contracts.Remove(this);
				}
				this._Kamp.Entity = value;
				if ((value != null))
				{
					value.Contracts.Add(this);
					this._KampId = value.Id;
				}
				else
				{
					this._KampId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Kamp");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Periode_Contract", Storage="_Periode", ThisKey="PeriodeId", OtherKey="Id", IsForeignKey=true)]
	public Periode Periode
	{
		get
		{
			return this._Periode.Entity;
		}
		set
		{
			Periode previousValue = this._Periode.Entity;
			if (((previousValue != value) 
						|| (this._Periode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Periode.Entity = null;
					previousValue.Contracts.Remove(this);
				}
				this._Periode.Entity = value;
				if ((value != null))
				{
					value.Contracts.Add(this);
					this._PeriodeId = value.Id;
				}
				else
				{
					this._PeriodeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Periode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Betalings(Betaling entity)
	{
		this.SendPropertyChanging();
		entity.Contract = this;
	}
	
	private void detach_Betalings(Betaling entity)
	{
		this.SendPropertyChanging();
		entity.Contract = null;
	}
	
	private void attach_ContractPersoons(ContractPersoon entity)
	{
		this.SendPropertyChanging();
		entity.Contract = this;
	}
	
	private void detach_ContractPersoons(ContractPersoon entity)
	{
		this.SendPropertyChanging();
		entity.Contract = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kamp")]
public partial class Kamp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Status;
	
	private System.Nullable<int> _AantalPersonen;
	
	private string _TijdstipAankomst;
	
	private string _TijdstipVertrek;
	
	private System.Nullable<int> _AantalTenten;
	
	private string _Opmerkingen;
	
	private System.Nullable<byte> _OpkuisVoorafGebeurd;
	
	private System.Nullable<byte> _OpkuisNadienGebeurd;
	
	private EntitySet<Contract> _Contracts;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnAantalPersonenChanging(System.Nullable<int> value);
    partial void OnAantalPersonenChanged();
    partial void OnTijdstipAankomstChanging(string value);
    partial void OnTijdstipAankomstChanged();
    partial void OnTijdstipVertrekChanging(string value);
    partial void OnTijdstipVertrekChanged();
    partial void OnAantalTentenChanging(System.Nullable<int> value);
    partial void OnAantalTentenChanged();
    partial void OnOpmerkingenChanging(string value);
    partial void OnOpmerkingenChanged();
    partial void OnOpkuisVoorafGebeurdChanging(System.Nullable<byte> value);
    partial void OnOpkuisVoorafGebeurdChanged();
    partial void OnOpkuisNadienGebeurdChanging(System.Nullable<byte> value);
    partial void OnOpkuisNadienGebeurdChanged();
    #endregion
	
	public Kamp()
	{
		this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AantalPersonen", DbType="Int")]
	public System.Nullable<int> AantalPersonen
	{
		get
		{
			return this._AantalPersonen;
		}
		set
		{
			if ((this._AantalPersonen != value))
			{
				this.OnAantalPersonenChanging(value);
				this.SendPropertyChanging();
				this._AantalPersonen = value;
				this.SendPropertyChanged("AantalPersonen");
				this.OnAantalPersonenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TijdstipAankomst", DbType="VarChar(50)")]
	public string TijdstipAankomst
	{
		get
		{
			return this._TijdstipAankomst;
		}
		set
		{
			if ((this._TijdstipAankomst != value))
			{
				this.OnTijdstipAankomstChanging(value);
				this.SendPropertyChanging();
				this._TijdstipAankomst = value;
				this.SendPropertyChanged("TijdstipAankomst");
				this.OnTijdstipAankomstChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TijdstipVertrek", DbType="VarChar(50)")]
	public string TijdstipVertrek
	{
		get
		{
			return this._TijdstipVertrek;
		}
		set
		{
			if ((this._TijdstipVertrek != value))
			{
				this.OnTijdstipVertrekChanging(value);
				this.SendPropertyChanging();
				this._TijdstipVertrek = value;
				this.SendPropertyChanged("TijdstipVertrek");
				this.OnTijdstipVertrekChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AantalTenten", DbType="Int")]
	public System.Nullable<int> AantalTenten
	{
		get
		{
			return this._AantalTenten;
		}
		set
		{
			if ((this._AantalTenten != value))
			{
				this.OnAantalTentenChanging(value);
				this.SendPropertyChanging();
				this._AantalTenten = value;
				this.SendPropertyChanged("AantalTenten");
				this.OnAantalTentenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opmerkingen", DbType="VarChar(5000)")]
	public string Opmerkingen
	{
		get
		{
			return this._Opmerkingen;
		}
		set
		{
			if ((this._Opmerkingen != value))
			{
				this.OnOpmerkingenChanging(value);
				this.SendPropertyChanging();
				this._Opmerkingen = value;
				this.SendPropertyChanged("Opmerkingen");
				this.OnOpmerkingenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpkuisVoorafGebeurd", DbType="TinyInt")]
	public System.Nullable<byte> OpkuisVoorafGebeurd
	{
		get
		{
			return this._OpkuisVoorafGebeurd;
		}
		set
		{
			if ((this._OpkuisVoorafGebeurd != value))
			{
				this.OnOpkuisVoorafGebeurdChanging(value);
				this.SendPropertyChanging();
				this._OpkuisVoorafGebeurd = value;
				this.SendPropertyChanged("OpkuisVoorafGebeurd");
				this.OnOpkuisVoorafGebeurdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpkuisNadienGebeurd", DbType="TinyInt")]
	public System.Nullable<byte> OpkuisNadienGebeurd
	{
		get
		{
			return this._OpkuisNadienGebeurd;
		}
		set
		{
			if ((this._OpkuisNadienGebeurd != value))
			{
				this.OnOpkuisNadienGebeurdChanging(value);
				this.SendPropertyChanging();
				this._OpkuisNadienGebeurd = value;
				this.SendPropertyChanged("OpkuisNadienGebeurd");
				this.OnOpkuisNadienGebeurdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kamp_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="KampId")]
	public EntitySet<Contract> Contracts
	{
		get
		{
			return this._Contracts;
		}
		set
		{
			this._Contracts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Contracts(Contract entity)
	{
		this.SendPropertyChanging();
		entity.Kamp = this;
	}
	
	private void detach_Contracts(Contract entity)
	{
		this.SendPropertyChanging();
		entity.Kamp = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Type")]
public partial class Type : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Naam;
	
	private EntitySet<Periode> _Periodes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
	
	public Type()
	{
		this._Periodes = new EntitySet<Periode>(new Action<Periode>(this.attach_Periodes), new Action<Periode>(this.detach_Periodes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Periode", Storage="_Periodes", ThisKey="Id", OtherKey="TypeId")]
	public EntitySet<Periode> Periodes
	{
		get
		{
			return this._Periodes;
		}
		set
		{
			this._Periodes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Periodes(Periode entity)
	{
		this.SendPropertyChanging();
		entity.Type = this;
	}
	
	private void detach_Periodes(Periode entity)
	{
		this.SendPropertyChanging();
		entity.Type = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Naam;
	
	private EntitySet<Periode> _Periodes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
	
	public Status()
	{
		this._Periodes = new EntitySet<Periode>(new Action<Periode>(this.attach_Periodes), new Action<Periode>(this.detach_Periodes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Periode", Storage="_Periodes", ThisKey="Id", OtherKey="StatusId")]
	public EntitySet<Periode> Periodes
	{
		get
		{
			return this._Periodes;
		}
		set
		{
			this._Periodes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Periodes(Periode entity)
	{
		this.SendPropertyChanging();
		entity.Status = this;
	}
	
	private void detach_Periodes(Periode entity)
	{
		this.SendPropertyChanging();
		entity.Status = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Periode")]
public partial class Periode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<System.DateTime> _BeginPeriode;
	
	private System.Nullable<System.DateTime> _EindePeriode;
	
	private System.Nullable<int> _TypeId;
	
	private System.Nullable<int> _StatusId;
	
	private EntitySet<Contract> _Contracts;
	
	private EntityRef<Status> _Status;
	
	private EntityRef<Type> _Type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBeginPeriodeChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginPeriodeChanged();
    partial void OnEindePeriodeChanging(System.Nullable<System.DateTime> value);
    partial void OnEindePeriodeChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    #endregion
	
	public Periode()
	{
		this._Contracts = new EntitySet<Contract>(new Action<Contract>(this.attach_Contracts), new Action<Contract>(this.detach_Contracts));
		this._Status = default(EntityRef<Status>);
		this._Type = default(EntityRef<Type>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginPeriode", DbType="Date")]
	public System.Nullable<System.DateTime> BeginPeriode
	{
		get
		{
			return this._BeginPeriode;
		}
		set
		{
			if ((this._BeginPeriode != value))
			{
				this.OnBeginPeriodeChanging(value);
				this.SendPropertyChanging();
				this._BeginPeriode = value;
				this.SendPropertyChanged("BeginPeriode");
				this.OnBeginPeriodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EindePeriode", DbType="Date")]
	public System.Nullable<System.DateTime> EindePeriode
	{
		get
		{
			return this._EindePeriode;
		}
		set
		{
			if ((this._EindePeriode != value))
			{
				this.OnEindePeriodeChanging(value);
				this.SendPropertyChanging();
				this._EindePeriode = value;
				this.SendPropertyChanged("EindePeriode");
				this.OnEindePeriodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
	public System.Nullable<int> TypeId
	{
		get
		{
			return this._TypeId;
		}
		set
		{
			if ((this._TypeId != value))
			{
				if (this._Type.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTypeIdChanging(value);
				this.SendPropertyChanging();
				this._TypeId = value;
				this.SendPropertyChanged("TypeId");
				this.OnTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
	public System.Nullable<int> StatusId
	{
		get
		{
			return this._StatusId;
		}
		set
		{
			if ((this._StatusId != value))
			{
				if (this._Status.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStatusIdChanging(value);
				this.SendPropertyChanging();
				this._StatusId = value;
				this.SendPropertyChanged("StatusId");
				this.OnStatusIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Periode_Contract", Storage="_Contracts", ThisKey="Id", OtherKey="PeriodeId")]
	public EntitySet<Contract> Contracts
	{
		get
		{
			return this._Contracts;
		}
		set
		{
			this._Contracts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Periode", Storage="_Status", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
	public Status Status
	{
		get
		{
			return this._Status.Entity;
		}
		set
		{
			Status previousValue = this._Status.Entity;
			if (((previousValue != value) 
						|| (this._Status.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Status.Entity = null;
					previousValue.Periodes.Remove(this);
				}
				this._Status.Entity = value;
				if ((value != null))
				{
					value.Periodes.Add(this);
					this._StatusId = value.Id;
				}
				else
				{
					this._StatusId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Status");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Type_Periode", Storage="_Type", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
	public Type Type
	{
		get
		{
			return this._Type.Entity;
		}
		set
		{
			Type previousValue = this._Type.Entity;
			if (((previousValue != value) 
						|| (this._Type.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Type.Entity = null;
					previousValue.Periodes.Remove(this);
				}
				this._Type.Entity = value;
				if ((value != null))
				{
					value.Periodes.Add(this);
					this._TypeId = value.Id;
				}
				else
				{
					this._TypeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Type");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Contracts(Contract entity)
	{
		this.SendPropertyChanging();
		entity.Periode = this;
	}
	
	private void detach_Contracts(Contract entity)
	{
		this.SendPropertyChanging();
		entity.Periode = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persoon")]
public partial class Persoon : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Email;
	
	private string _Wachtwoord;
	
	private string _Naam;
	
	private string _Voornaam;
	
	private string _Adres;
	
	private string _Postcode;
	
	private string _Plaats;
	
	private string _Telefoonnummer;
	
	private string _Type;
	
	private System.Nullable<int> _VerenigingId;
	
	private EntitySet<ContractPersoon> _ContractPersoons;
	
	private EntityRef<Vereniging> _Vereniging;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWachtwoordChanging(string value);
    partial void OnWachtwoordChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnPostcodeChanging(string value);
    partial void OnPostcodeChanged();
    partial void OnPlaatsChanging(string value);
    partial void OnPlaatsChanged();
    partial void OnTelefoonnummerChanging(string value);
    partial void OnTelefoonnummerChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnVerenigingIdChanging(System.Nullable<int> value);
    partial void OnVerenigingIdChanged();
    #endregion
	
	public Persoon()
	{
		this._ContractPersoons = new EntitySet<ContractPersoon>(new Action<ContractPersoon>(this.attach_ContractPersoons), new Action<ContractPersoon>(this.detach_ContractPersoons));
		this._Vereniging = default(EntityRef<Vereniging>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wachtwoord", DbType="VarChar(150)")]
	public string Wachtwoord
	{
		get
		{
			return this._Wachtwoord;
		}
		set
		{
			if ((this._Wachtwoord != value))
			{
				this.OnWachtwoordChanging(value);
				this.SendPropertyChanging();
				this._Wachtwoord = value;
				this.SendPropertyChanged("Wachtwoord");
				this.OnWachtwoordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(150)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(150)")]
	public string Voornaam
	{
		get
		{
			return this._Voornaam;
		}
		set
		{
			if ((this._Voornaam != value))
			{
				this.OnVoornaamChanging(value);
				this.SendPropertyChanging();
				this._Voornaam = value;
				this.SendPropertyChanged("Voornaam");
				this.OnVoornaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(150)")]
	public string Adres
	{
		get
		{
			return this._Adres;
		}
		set
		{
			if ((this._Adres != value))
			{
				this.OnAdresChanging(value);
				this.SendPropertyChanging();
				this._Adres = value;
				this.SendPropertyChanged("Adres");
				this.OnAdresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="VarChar(50)")]
	public string Postcode
	{
		get
		{
			return this._Postcode;
		}
		set
		{
			if ((this._Postcode != value))
			{
				this.OnPostcodeChanging(value);
				this.SendPropertyChanging();
				this._Postcode = value;
				this.SendPropertyChanged("Postcode");
				this.OnPostcodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plaats", DbType="VarChar(150)")]
	public string Plaats
	{
		get
		{
			return this._Plaats;
		}
		set
		{
			if ((this._Plaats != value))
			{
				this.OnPlaatsChanging(value);
				this.SendPropertyChanging();
				this._Plaats = value;
				this.SendPropertyChanged("Plaats");
				this.OnPlaatsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefoonnummer", DbType="VarChar(50)")]
	public string Telefoonnummer
	{
		get
		{
			return this._Telefoonnummer;
		}
		set
		{
			if ((this._Telefoonnummer != value))
			{
				this.OnTelefoonnummerChanging(value);
				this.SendPropertyChanging();
				this._Telefoonnummer = value;
				this.SendPropertyChanged("Telefoonnummer");
				this.OnTelefoonnummerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerenigingId", DbType="Int")]
	public System.Nullable<int> VerenigingId
	{
		get
		{
			return this._VerenigingId;
		}
		set
		{
			if ((this._VerenigingId != value))
			{
				if (this._Vereniging.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVerenigingIdChanging(value);
				this.SendPropertyChanging();
				this._VerenigingId = value;
				this.SendPropertyChanged("VerenigingId");
				this.OnVerenigingIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_ContractPersoon", Storage="_ContractPersoons", ThisKey="Id", OtherKey="PersoonId")]
	public EntitySet<ContractPersoon> ContractPersoons
	{
		get
		{
			return this._ContractPersoons;
		}
		set
		{
			this._ContractPersoons.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vereniging_Persoon", Storage="_Vereniging", ThisKey="VerenigingId", OtherKey="Id", IsForeignKey=true)]
	public Vereniging Vereniging
	{
		get
		{
			return this._Vereniging.Entity;
		}
		set
		{
			Vereniging previousValue = this._Vereniging.Entity;
			if (((previousValue != value) 
						|| (this._Vereniging.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Vereniging.Entity = null;
					previousValue.Persoons.Remove(this);
				}
				this._Vereniging.Entity = value;
				if ((value != null))
				{
					value.Persoons.Add(this);
					this._VerenigingId = value.Id;
				}
				else
				{
					this._VerenigingId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Vereniging");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ContractPersoons(ContractPersoon entity)
	{
		this.SendPropertyChanging();
		entity.Persoon = this;
	}
	
	private void detach_ContractPersoons(ContractPersoon entity)
	{
		this.SendPropertyChanging();
		entity.Persoon = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusBetaling")]
public partial class StatusBetaling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Naam;
	
	private EntitySet<Betaling> _Betalings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
	
	public StatusBetaling()
	{
		this._Betalings = new EntitySet<Betaling>(new Action<Betaling>(this.attach_Betalings), new Action<Betaling>(this.detach_Betalings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusBetaling_Betaling", Storage="_Betalings", ThisKey="Id", OtherKey="StatusBetalingId")]
	public EntitySet<Betaling> Betalings
	{
		get
		{
			return this._Betalings;
		}
		set
		{
			this._Betalings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Betalings(Betaling entity)
	{
		this.SendPropertyChanging();
		entity.StatusBetaling = this;
	}
	
	private void detach_Betalings(Betaling entity)
	{
		this.SendPropertyChanging();
		entity.StatusBetaling = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeBetaling")]
public partial class TypeBetaling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Naam;
	
	private EntitySet<Betaling> _Betalings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
	
	public TypeBetaling()
	{
		this._Betalings = new EntitySet<Betaling>(new Action<Betaling>(this.attach_Betalings), new Action<Betaling>(this.detach_Betalings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeBetaling_Betaling", Storage="_Betalings", ThisKey="Id", OtherKey="TypeBetalingId")]
	public EntitySet<Betaling> Betalings
	{
		get
		{
			return this._Betalings;
		}
		set
		{
			this._Betalings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Betalings(Betaling entity)
	{
		this.SendPropertyChanging();
		entity.TypeBetaling = this;
	}
	
	private void detach_Betalings(Betaling entity)
	{
		this.SendPropertyChanging();
		entity.TypeBetaling = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Betaling")]
public partial class Betaling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _ContractId;
	
	private string _Betalingswijze;
	
	private System.Nullable<int> _TypeBetalingId;
	
	private System.Nullable<int> _StatusBetalingId;
	
	private System.Nullable<int> _Bedrag;
	
	private EntityRef<Contract> _Contract;
	
	private EntityRef<StatusBetaling> _StatusBetaling;
	
	private EntityRef<TypeBetaling> _TypeBetaling;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContractIdChanging(System.Nullable<int> value);
    partial void OnContractIdChanged();
    partial void OnBetalingswijzeChanging(string value);
    partial void OnBetalingswijzeChanged();
    partial void OnTypeBetalingIdChanging(System.Nullable<int> value);
    partial void OnTypeBetalingIdChanged();
    partial void OnStatusBetalingIdChanging(System.Nullable<int> value);
    partial void OnStatusBetalingIdChanged();
    partial void OnBedragChanging(System.Nullable<int> value);
    partial void OnBedragChanged();
    #endregion
	
	public Betaling()
	{
		this._Contract = default(EntityRef<Contract>);
		this._StatusBetaling = default(EntityRef<StatusBetaling>);
		this._TypeBetaling = default(EntityRef<TypeBetaling>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="Int")]
	public System.Nullable<int> ContractId
	{
		get
		{
			return this._ContractId;
		}
		set
		{
			if ((this._ContractId != value))
			{
				if (this._Contract.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContractIdChanging(value);
				this.SendPropertyChanging();
				this._ContractId = value;
				this.SendPropertyChanged("ContractId");
				this.OnContractIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Betalingswijze", DbType="VarChar(50)")]
	public string Betalingswijze
	{
		get
		{
			return this._Betalingswijze;
		}
		set
		{
			if ((this._Betalingswijze != value))
			{
				this.OnBetalingswijzeChanging(value);
				this.SendPropertyChanging();
				this._Betalingswijze = value;
				this.SendPropertyChanged("Betalingswijze");
				this.OnBetalingswijzeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeBetalingId", DbType="Int")]
	public System.Nullable<int> TypeBetalingId
	{
		get
		{
			return this._TypeBetalingId;
		}
		set
		{
			if ((this._TypeBetalingId != value))
			{
				if (this._TypeBetaling.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTypeBetalingIdChanging(value);
				this.SendPropertyChanging();
				this._TypeBetalingId = value;
				this.SendPropertyChanged("TypeBetalingId");
				this.OnTypeBetalingIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusBetalingId", DbType="Int")]
	public System.Nullable<int> StatusBetalingId
	{
		get
		{
			return this._StatusBetalingId;
		}
		set
		{
			if ((this._StatusBetalingId != value))
			{
				if (this._StatusBetaling.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStatusBetalingIdChanging(value);
				this.SendPropertyChanging();
				this._StatusBetalingId = value;
				this.SendPropertyChanged("StatusBetalingId");
				this.OnStatusBetalingIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bedrag", DbType="Int")]
	public System.Nullable<int> Bedrag
	{
		get
		{
			return this._Bedrag;
		}
		set
		{
			if ((this._Bedrag != value))
			{
				this.OnBedragChanging(value);
				this.SendPropertyChanging();
				this._Bedrag = value;
				this.SendPropertyChanged("Bedrag");
				this.OnBedragChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_Betaling", Storage="_Contract", ThisKey="ContractId", OtherKey="Id", IsForeignKey=true)]
	public Contract Contract
	{
		get
		{
			return this._Contract.Entity;
		}
		set
		{
			Contract previousValue = this._Contract.Entity;
			if (((previousValue != value) 
						|| (this._Contract.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Contract.Entity = null;
					previousValue.Betalings.Remove(this);
				}
				this._Contract.Entity = value;
				if ((value != null))
				{
					value.Betalings.Add(this);
					this._ContractId = value.Id;
				}
				else
				{
					this._ContractId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Contract");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusBetaling_Betaling", Storage="_StatusBetaling", ThisKey="StatusBetalingId", OtherKey="Id", IsForeignKey=true)]
	public StatusBetaling StatusBetaling
	{
		get
		{
			return this._StatusBetaling.Entity;
		}
		set
		{
			StatusBetaling previousValue = this._StatusBetaling.Entity;
			if (((previousValue != value) 
						|| (this._StatusBetaling.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StatusBetaling.Entity = null;
					previousValue.Betalings.Remove(this);
				}
				this._StatusBetaling.Entity = value;
				if ((value != null))
				{
					value.Betalings.Add(this);
					this._StatusBetalingId = value.Id;
				}
				else
				{
					this._StatusBetalingId = default(Nullable<int>);
				}
				this.SendPropertyChanged("StatusBetaling");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeBetaling_Betaling", Storage="_TypeBetaling", ThisKey="TypeBetalingId", OtherKey="Id", IsForeignKey=true)]
	public TypeBetaling TypeBetaling
	{
		get
		{
			return this._TypeBetaling.Entity;
		}
		set
		{
			TypeBetaling previousValue = this._TypeBetaling.Entity;
			if (((previousValue != value) 
						|| (this._TypeBetaling.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TypeBetaling.Entity = null;
					previousValue.Betalings.Remove(this);
				}
				this._TypeBetaling.Entity = value;
				if ((value != null))
				{
					value.Betalings.Add(this);
					this._TypeBetalingId = value.Id;
				}
				else
				{
					this._TypeBetalingId = default(Nullable<int>);
				}
				this.SendPropertyChanged("TypeBetaling");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractPersoon")]
public partial class ContractPersoon : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _ContractId;
	
	private System.Nullable<int> _PersoonId;
	
	private System.Nullable<int> _RolId;
	
	private EntityRef<Contract> _Contract;
	
	private EntityRef<Persoon> _Persoon;
	
	private EntityRef<Rol> _Rol;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContractIdChanging(System.Nullable<int> value);
    partial void OnContractIdChanged();
    partial void OnPersoonIdChanging(System.Nullable<int> value);
    partial void OnPersoonIdChanged();
    partial void OnRolIdChanging(System.Nullable<int> value);
    partial void OnRolIdChanged();
    #endregion
	
	public ContractPersoon()
	{
		this._Contract = default(EntityRef<Contract>);
		this._Persoon = default(EntityRef<Persoon>);
		this._Rol = default(EntityRef<Rol>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="Int")]
	public System.Nullable<int> ContractId
	{
		get
		{
			return this._ContractId;
		}
		set
		{
			if ((this._ContractId != value))
			{
				if (this._Contract.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnContractIdChanging(value);
				this.SendPropertyChanging();
				this._ContractId = value;
				this.SendPropertyChanged("ContractId");
				this.OnContractIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersoonId", DbType="Int")]
	public System.Nullable<int> PersoonId
	{
		get
		{
			return this._PersoonId;
		}
		set
		{
			if ((this._PersoonId != value))
			{
				if (this._Persoon.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPersoonIdChanging(value);
				this.SendPropertyChanging();
				this._PersoonId = value;
				this.SendPropertyChanged("PersoonId");
				this.OnPersoonIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolId", DbType="Int")]
	public System.Nullable<int> RolId
	{
		get
		{
			return this._RolId;
		}
		set
		{
			if ((this._RolId != value))
			{
				if (this._Rol.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRolIdChanging(value);
				this.SendPropertyChanging();
				this._RolId = value;
				this.SendPropertyChanged("RolId");
				this.OnRolIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractPersoon", Storage="_Contract", ThisKey="ContractId", OtherKey="Id", IsForeignKey=true)]
	public Contract Contract
	{
		get
		{
			return this._Contract.Entity;
		}
		set
		{
			Contract previousValue = this._Contract.Entity;
			if (((previousValue != value) 
						|| (this._Contract.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Contract.Entity = null;
					previousValue.ContractPersoons.Remove(this);
				}
				this._Contract.Entity = value;
				if ((value != null))
				{
					value.ContractPersoons.Add(this);
					this._ContractId = value.Id;
				}
				else
				{
					this._ContractId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Contract");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_ContractPersoon", Storage="_Persoon", ThisKey="PersoonId", OtherKey="Id", IsForeignKey=true)]
	public Persoon Persoon
	{
		get
		{
			return this._Persoon.Entity;
		}
		set
		{
			Persoon previousValue = this._Persoon.Entity;
			if (((previousValue != value) 
						|| (this._Persoon.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Persoon.Entity = null;
					previousValue.ContractPersoons.Remove(this);
				}
				this._Persoon.Entity = value;
				if ((value != null))
				{
					value.ContractPersoons.Add(this);
					this._PersoonId = value.Id;
				}
				else
				{
					this._PersoonId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Persoon");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_ContractPersoon", Storage="_Rol", ThisKey="RolId", OtherKey="Id", IsForeignKey=true)]
	public Rol Rol
	{
		get
		{
			return this._Rol.Entity;
		}
		set
		{
			Rol previousValue = this._Rol.Entity;
			if (((previousValue != value) 
						|| (this._Rol.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Rol.Entity = null;
					previousValue.ContractPersoons.Remove(this);
				}
				this._Rol.Entity = value;
				if ((value != null))
				{
					value.ContractPersoons.Add(this);
					this._RolId = value.Id;
				}
				else
				{
					this._RolId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Rol");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Naam;
	
	private EntitySet<ContractPersoon> _ContractPersoons;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    #endregion
	
	public Rol()
	{
		this._ContractPersoons = new EntitySet<ContractPersoon>(new Action<ContractPersoon>(this.attach_ContractPersoons), new Action<ContractPersoon>(this.detach_ContractPersoons));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50)")]
	public string Naam
	{
		get
		{
			return this._Naam;
		}
		set
		{
			if ((this._Naam != value))
			{
				this.OnNaamChanging(value);
				this.SendPropertyChanging();
				this._Naam = value;
				this.SendPropertyChanged("Naam");
				this.OnNaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_ContractPersoon", Storage="_ContractPersoons", ThisKey="Id", OtherKey="RolId")]
	public EntitySet<ContractPersoon> ContractPersoons
	{
		get
		{
			return this._ContractPersoons;
		}
		set
		{
			this._ContractPersoons.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ContractPersoons(ContractPersoon entity)
	{
		this.SendPropertyChanging();
		entity.Rol = this;
	}
	
	private void detach_ContractPersoons(ContractPersoon entity)
	{
		this.SendPropertyChanging();
		entity.Rol = null;
	}
}
#pragma warning restore 1591
